'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("_VBE_DatamartDataSet2"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class _VBE_DatamartDataSet2
    Inherits Global.System.Data.DataSet
    
    Private tableCM_PATIENT_CONTACT_DOC As CM_PATIENT_CONTACT_DOCDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CM_PATIENT_CONTACT_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New CM_PATIENT_CONTACT_DOCDataTable(ds.Tables("CM_PATIENT_CONTACT_DOC")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CM_PATIENT_CONTACT_DOC() As CM_PATIENT_CONTACT_DOCDataTable
        Get
            Return Me.tableCM_PATIENT_CONTACT_DOC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As _VBE_DatamartDataSet2 = CType(MyBase.Clone,_VBE_DatamartDataSet2)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CM_PATIENT_CONTACT_DOC")) Is Nothing) Then
                MyBase.Tables.Add(New CM_PATIENT_CONTACT_DOCDataTable(ds.Tables("CM_PATIENT_CONTACT_DOC")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCM_PATIENT_CONTACT_DOC = CType(MyBase.Tables("CM_PATIENT_CONTACT_DOC"),CM_PATIENT_CONTACT_DOCDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCM_PATIENT_CONTACT_DOC) Is Nothing) Then
                Me.tableCM_PATIENT_CONTACT_DOC.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "_VBE_DatamartDataSet2"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/_VBE_DatamartDataSet2.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCM_PATIENT_CONTACT_DOC = New CM_PATIENT_CONTACT_DOCDataTable()
        MyBase.Tables.Add(Me.tableCM_PATIENT_CONTACT_DOC)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeCM_PATIENT_CONTACT_DOC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As _VBE_DatamartDataSet2 = New _VBE_DatamartDataSet2()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub CM_PATIENT_CONTACT_DOCRowChangeEventHandler(ByVal sender As Object, ByVal e As CM_PATIENT_CONTACT_DOCRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CM_PATIENT_CONTACT_DOCDataTable
        Inherits Global.System.Data.TypedTableBase(Of CM_PATIENT_CONTACT_DOCRow)
        
        Private columnPATIENT_ID As Global.System.Data.DataColumn
        
        Private columnOUTREACH_DATE As Global.System.Data.DataColumn
        
        Private columnOUTREACH_ENTRY_DATETIME As Global.System.Data.DataColumn
        
        Private columnOUTREACH_CONTACT_PERSON As Global.System.Data.DataColumn
        
        Private columnOUTREACH_CONTACT_PERSON_NAME As Global.System.Data.DataColumn
        
        Private columnREASON_FOR_OUTREACH As Global.System.Data.DataColumn
        
        Private columnCONTACT_MADE_IND As Global.System.Data.DataColumn
        
        Private columnCONTACT_NOT_MADE_IND As Global.System.Data.DataColumn
        
        Private columnRETURN_CALL_DATE As Global.System.Data.DataColumn
        
        Private columnAPPOINTMENT_DATE_RESULT As Global.System.Data.DataColumn
        
        Private columnDD_NOT_CONTACT_FLAG As Global.System.Data.DataColumn
        
        Private columnCASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE As Global.System.Data.DataColumn
        
        Private columnNETWORK_PATIENT_ADDR_LINE_1 As Global.System.Data.DataColumn
        
        Private columnNETWORK_PATIENT_ADDR_LINE_2 As Global.System.Data.DataColumn
        
        Private columnNETWORK_PATIENT_CITY As Global.System.Data.DataColumn
        
        Private columnNETWORK_PATIENT_STATE As Global.System.Data.DataColumn
        
        Private columnNETWORK_PATIENT_ZIP_CODE As Global.System.Data.DataColumn
        
        Private columnNETWORK_PATIENT_HOME_PHONE As Global.System.Data.DataColumn
        
        Private columnNETWORK_PATIENT_WORK_PHONE As Global.System.Data.DataColumn
        
        Private columnNETWORK_PATIENT_MOBILE_PHONE As Global.System.Data.DataColumn
        
        Private columnNETWORK_PATIENT_EMAIL As Global.System.Data.DataColumn
        
        Private columnACTIVE_PATIENT_FLAG As Global.System.Data.DataColumn
        
        Private columnNOTE As Global.System.Data.DataColumn
        
        Private columnSTATUS As Global.System.Data.DataColumn
        
        Private columnMAX_ATTRIBUTION_MONTH As Global.System.Data.DataColumn
        
        Private columnLAST_REVISE_DATE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CM_PATIENT_CONTACT_DOC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property PATIENT_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OUTREACH_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOUTREACH_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OUTREACH_ENTRY_DATETIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOUTREACH_ENTRY_DATETIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OUTREACH_CONTACT_PERSONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOUTREACH_CONTACT_PERSON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property OUTREACH_CONTACT_PERSON_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOUTREACH_CONTACT_PERSON_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property REASON_FOR_OUTREACHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREASON_FOR_OUTREACH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CONTACT_MADE_INDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT_MADE_IND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CONTACT_NOT_MADE_INDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACT_NOT_MADE_IND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property RETURN_CALL_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRETURN_CALL_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property APPOINTMENT_DATE_RESULTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPPOINTMENT_DATE_RESULT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property DD_NOT_CONTACT_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDD_NOT_CONTACT_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NETWORK_PATIENT_ADDR_LINE_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNETWORK_PATIENT_ADDR_LINE_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NETWORK_PATIENT_ADDR_LINE_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNETWORK_PATIENT_ADDR_LINE_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NETWORK_PATIENT_CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNETWORK_PATIENT_CITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NETWORK_PATIENT_STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNETWORK_PATIENT_STATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NETWORK_PATIENT_ZIP_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNETWORK_PATIENT_ZIP_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NETWORK_PATIENT_HOME_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNETWORK_PATIENT_HOME_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NETWORK_PATIENT_WORK_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNETWORK_PATIENT_WORK_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NETWORK_PATIENT_MOBILE_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNETWORK_PATIENT_MOBILE_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NETWORK_PATIENT_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNETWORK_PATIENT_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ACTIVE_PATIENT_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTIVE_PATIENT_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property MAX_ATTRIBUTION_MONTHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAX_ATTRIBUTION_MONTH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property LAST_REVISE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLAST_REVISE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CM_PATIENT_CONTACT_DOCRow
            Get
                Return CType(Me.Rows(index),CM_PATIENT_CONTACT_DOCRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CM_PATIENT_CONTACT_DOCRowChanging As CM_PATIENT_CONTACT_DOCRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CM_PATIENT_CONTACT_DOCRowChanged As CM_PATIENT_CONTACT_DOCRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CM_PATIENT_CONTACT_DOCRowDeleting As CM_PATIENT_CONTACT_DOCRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event CM_PATIENT_CONTACT_DOCRowDeleted As CM_PATIENT_CONTACT_DOCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddCM_PATIENT_CONTACT_DOCRow(ByVal row As CM_PATIENT_CONTACT_DOCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddCM_PATIENT_CONTACT_DOCRow( _
                    ByVal PATIENT_ID As Long,  _
                    ByVal OUTREACH_DATE As Date,  _
                    ByVal OUTREACH_ENTRY_DATETIME As Date,  _
                    ByVal OUTREACH_CONTACT_PERSON As String,  _
                    ByVal OUTREACH_CONTACT_PERSON_NAME As String,  _
                    ByVal REASON_FOR_OUTREACH As String,  _
                    ByVal CONTACT_MADE_IND As Integer,  _
                    ByVal CONTACT_NOT_MADE_IND As Integer,  _
                    ByVal RETURN_CALL_DATE As Date,  _
                    ByVal APPOINTMENT_DATE_RESULT As Date,  _
                    ByVal DD_NOT_CONTACT_FLAG As String,  _
                    ByVal CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE As String,  _
                    ByVal NETWORK_PATIENT_ADDR_LINE_1 As String,  _
                    ByVal NETWORK_PATIENT_ADDR_LINE_2 As String,  _
                    ByVal NETWORK_PATIENT_CITY As String,  _
                    ByVal NETWORK_PATIENT_STATE As String,  _
                    ByVal NETWORK_PATIENT_ZIP_CODE As String,  _
                    ByVal NETWORK_PATIENT_HOME_PHONE As String,  _
                    ByVal NETWORK_PATIENT_WORK_PHONE As String,  _
                    ByVal NETWORK_PATIENT_MOBILE_PHONE As String,  _
                    ByVal NETWORK_PATIENT_EMAIL As String,  _
                    ByVal ACTIVE_PATIENT_FLAG As String,  _
                    ByVal NOTE As String,  _
                    ByVal STATUS As String,  _
                    ByVal MAX_ATTRIBUTION_MONTH As Decimal,  _
                    ByVal LAST_REVISE_DATE As Date) As CM_PATIENT_CONTACT_DOCRow
            Dim rowCM_PATIENT_CONTACT_DOCRow As CM_PATIENT_CONTACT_DOCRow = CType(Me.NewRow,CM_PATIENT_CONTACT_DOCRow)
            Dim columnValuesArray() As Object = New Object() {PATIENT_ID, OUTREACH_DATE, OUTREACH_ENTRY_DATETIME, OUTREACH_CONTACT_PERSON, OUTREACH_CONTACT_PERSON_NAME, REASON_FOR_OUTREACH, CONTACT_MADE_IND, CONTACT_NOT_MADE_IND, RETURN_CALL_DATE, APPOINTMENT_DATE_RESULT, DD_NOT_CONTACT_FLAG, CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE, NETWORK_PATIENT_ADDR_LINE_1, NETWORK_PATIENT_ADDR_LINE_2, NETWORK_PATIENT_CITY, NETWORK_PATIENT_STATE, NETWORK_PATIENT_ZIP_CODE, NETWORK_PATIENT_HOME_PHONE, NETWORK_PATIENT_WORK_PHONE, NETWORK_PATIENT_MOBILE_PHONE, NETWORK_PATIENT_EMAIL, ACTIVE_PATIENT_FLAG, NOTE, STATUS, MAX_ATTRIBUTION_MONTH, LAST_REVISE_DATE}
            rowCM_PATIENT_CONTACT_DOCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCM_PATIENT_CONTACT_DOCRow)
            Return rowCM_PATIENT_CONTACT_DOCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function FindByPATIENT_IDOUTREACH_DATEOUTREACH_ENTRY_DATETIME(ByVal PATIENT_ID As Long, ByVal OUTREACH_DATE As Date, ByVal OUTREACH_ENTRY_DATETIME As Date) As CM_PATIENT_CONTACT_DOCRow
            Return CType(Me.Rows.Find(New Object() {PATIENT_ID, OUTREACH_DATE, OUTREACH_ENTRY_DATETIME}),CM_PATIENT_CONTACT_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CM_PATIENT_CONTACT_DOCDataTable = CType(MyBase.Clone,CM_PATIENT_CONTACT_DOCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CM_PATIENT_CONTACT_DOCDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPATIENT_ID = MyBase.Columns("PATIENT_ID")
            Me.columnOUTREACH_DATE = MyBase.Columns("OUTREACH_DATE")
            Me.columnOUTREACH_ENTRY_DATETIME = MyBase.Columns("OUTREACH_ENTRY_DATETIME")
            Me.columnOUTREACH_CONTACT_PERSON = MyBase.Columns("OUTREACH_CONTACT_PERSON")
            Me.columnOUTREACH_CONTACT_PERSON_NAME = MyBase.Columns("OUTREACH_CONTACT_PERSON_NAME")
            Me.columnREASON_FOR_OUTREACH = MyBase.Columns("REASON_FOR_OUTREACH")
            Me.columnCONTACT_MADE_IND = MyBase.Columns("CONTACT_MADE_IND")
            Me.columnCONTACT_NOT_MADE_IND = MyBase.Columns("CONTACT_NOT_MADE_IND")
            Me.columnRETURN_CALL_DATE = MyBase.Columns("RETURN_CALL_DATE")
            Me.columnAPPOINTMENT_DATE_RESULT = MyBase.Columns("APPOINTMENT_DATE_RESULT")
            Me.columnDD_NOT_CONTACT_FLAG = MyBase.Columns("DD_NOT_CONTACT_FLAG")
            Me.columnCASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE = MyBase.Columns("CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE")
            Me.columnNETWORK_PATIENT_ADDR_LINE_1 = MyBase.Columns("NETWORK_PATIENT_ADDR_LINE_1")
            Me.columnNETWORK_PATIENT_ADDR_LINE_2 = MyBase.Columns("NETWORK_PATIENT_ADDR_LINE_2")
            Me.columnNETWORK_PATIENT_CITY = MyBase.Columns("NETWORK_PATIENT_CITY")
            Me.columnNETWORK_PATIENT_STATE = MyBase.Columns("NETWORK_PATIENT_STATE")
            Me.columnNETWORK_PATIENT_ZIP_CODE = MyBase.Columns("NETWORK_PATIENT_ZIP_CODE")
            Me.columnNETWORK_PATIENT_HOME_PHONE = MyBase.Columns("NETWORK_PATIENT_HOME_PHONE")
            Me.columnNETWORK_PATIENT_WORK_PHONE = MyBase.Columns("NETWORK_PATIENT_WORK_PHONE")
            Me.columnNETWORK_PATIENT_MOBILE_PHONE = MyBase.Columns("NETWORK_PATIENT_MOBILE_PHONE")
            Me.columnNETWORK_PATIENT_EMAIL = MyBase.Columns("NETWORK_PATIENT_EMAIL")
            Me.columnACTIVE_PATIENT_FLAG = MyBase.Columns("ACTIVE_PATIENT_FLAG")
            Me.columnNOTE = MyBase.Columns("NOTE")
            Me.columnSTATUS = MyBase.Columns("STATUS")
            Me.columnMAX_ATTRIBUTION_MONTH = MyBase.Columns("MAX_ATTRIBUTION_MONTH")
            Me.columnLAST_REVISE_DATE = MyBase.Columns("LAST_REVISE_DATE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPATIENT_ID = New Global.System.Data.DataColumn("PATIENT_ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_ID)
            Me.columnOUTREACH_DATE = New Global.System.Data.DataColumn("OUTREACH_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOUTREACH_DATE)
            Me.columnOUTREACH_ENTRY_DATETIME = New Global.System.Data.DataColumn("OUTREACH_ENTRY_DATETIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOUTREACH_ENTRY_DATETIME)
            Me.columnOUTREACH_CONTACT_PERSON = New Global.System.Data.DataColumn("OUTREACH_CONTACT_PERSON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOUTREACH_CONTACT_PERSON)
            Me.columnOUTREACH_CONTACT_PERSON_NAME = New Global.System.Data.DataColumn("OUTREACH_CONTACT_PERSON_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOUTREACH_CONTACT_PERSON_NAME)
            Me.columnREASON_FOR_OUTREACH = New Global.System.Data.DataColumn("REASON_FOR_OUTREACH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREASON_FOR_OUTREACH)
            Me.columnCONTACT_MADE_IND = New Global.System.Data.DataColumn("CONTACT_MADE_IND", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT_MADE_IND)
            Me.columnCONTACT_NOT_MADE_IND = New Global.System.Data.DataColumn("CONTACT_NOT_MADE_IND", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACT_NOT_MADE_IND)
            Me.columnRETURN_CALL_DATE = New Global.System.Data.DataColumn("RETURN_CALL_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRETURN_CALL_DATE)
            Me.columnAPPOINTMENT_DATE_RESULT = New Global.System.Data.DataColumn("APPOINTMENT_DATE_RESULT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPPOINTMENT_DATE_RESULT)
            Me.columnDD_NOT_CONTACT_FLAG = New Global.System.Data.DataColumn("DD_NOT_CONTACT_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDD_NOT_CONTACT_FLAG)
            Me.columnCASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE = New Global.System.Data.DataColumn("CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE)
            Me.columnNETWORK_PATIENT_ADDR_LINE_1 = New Global.System.Data.DataColumn("NETWORK_PATIENT_ADDR_LINE_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNETWORK_PATIENT_ADDR_LINE_1)
            Me.columnNETWORK_PATIENT_ADDR_LINE_2 = New Global.System.Data.DataColumn("NETWORK_PATIENT_ADDR_LINE_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNETWORK_PATIENT_ADDR_LINE_2)
            Me.columnNETWORK_PATIENT_CITY = New Global.System.Data.DataColumn("NETWORK_PATIENT_CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNETWORK_PATIENT_CITY)
            Me.columnNETWORK_PATIENT_STATE = New Global.System.Data.DataColumn("NETWORK_PATIENT_STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNETWORK_PATIENT_STATE)
            Me.columnNETWORK_PATIENT_ZIP_CODE = New Global.System.Data.DataColumn("NETWORK_PATIENT_ZIP_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNETWORK_PATIENT_ZIP_CODE)
            Me.columnNETWORK_PATIENT_HOME_PHONE = New Global.System.Data.DataColumn("NETWORK_PATIENT_HOME_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNETWORK_PATIENT_HOME_PHONE)
            Me.columnNETWORK_PATIENT_WORK_PHONE = New Global.System.Data.DataColumn("NETWORK_PATIENT_WORK_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNETWORK_PATIENT_WORK_PHONE)
            Me.columnNETWORK_PATIENT_MOBILE_PHONE = New Global.System.Data.DataColumn("NETWORK_PATIENT_MOBILE_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNETWORK_PATIENT_MOBILE_PHONE)
            Me.columnNETWORK_PATIENT_EMAIL = New Global.System.Data.DataColumn("NETWORK_PATIENT_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNETWORK_PATIENT_EMAIL)
            Me.columnACTIVE_PATIENT_FLAG = New Global.System.Data.DataColumn("ACTIVE_PATIENT_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTIVE_PATIENT_FLAG)
            Me.columnNOTE = New Global.System.Data.DataColumn("NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTE)
            Me.columnSTATUS = New Global.System.Data.DataColumn("STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS)
            Me.columnMAX_ATTRIBUTION_MONTH = New Global.System.Data.DataColumn("MAX_ATTRIBUTION_MONTH", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAX_ATTRIBUTION_MONTH)
            Me.columnLAST_REVISE_DATE = New Global.System.Data.DataColumn("LAST_REVISE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLAST_REVISE_DATE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPATIENT_ID, Me.columnOUTREACH_DATE, Me.columnOUTREACH_ENTRY_DATETIME}, true))
            Me.columnPATIENT_ID.AllowDBNull = false
            Me.columnOUTREACH_DATE.AllowDBNull = false
            Me.columnOUTREACH_ENTRY_DATETIME.AllowDBNull = false
            Me.columnOUTREACH_CONTACT_PERSON.AllowDBNull = false
            Me.columnOUTREACH_CONTACT_PERSON.MaxLength = 100
            Me.columnOUTREACH_CONTACT_PERSON_NAME.AllowDBNull = false
            Me.columnOUTREACH_CONTACT_PERSON_NAME.MaxLength = 100
            Me.columnREASON_FOR_OUTREACH.MaxLength = 500
            Me.columnDD_NOT_CONTACT_FLAG.MaxLength = 1
            Me.columnCASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE.MaxLength = 200
            Me.columnNETWORK_PATIENT_ADDR_LINE_1.MaxLength = 100
            Me.columnNETWORK_PATIENT_ADDR_LINE_2.MaxLength = 100
            Me.columnNETWORK_PATIENT_CITY.MaxLength = 50
            Me.columnNETWORK_PATIENT_STATE.MaxLength = 2
            Me.columnNETWORK_PATIENT_ZIP_CODE.MaxLength = 5
            Me.columnNETWORK_PATIENT_HOME_PHONE.MaxLength = 30
            Me.columnNETWORK_PATIENT_WORK_PHONE.MaxLength = 30
            Me.columnNETWORK_PATIENT_MOBILE_PHONE.MaxLength = 30
            Me.columnNETWORK_PATIENT_EMAIL.MaxLength = 100
            Me.columnACTIVE_PATIENT_FLAG.MaxLength = 1
            Me.columnNOTE.MaxLength = 4000
            Me.columnSTATUS.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewCM_PATIENT_CONTACT_DOCRow() As CM_PATIENT_CONTACT_DOCRow
            Return CType(Me.NewRow,CM_PATIENT_CONTACT_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CM_PATIENT_CONTACT_DOCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CM_PATIENT_CONTACT_DOCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CM_PATIENT_CONTACT_DOCRowChangedEvent) Is Nothing) Then
                RaiseEvent CM_PATIENT_CONTACT_DOCRowChanged(Me, New CM_PATIENT_CONTACT_DOCRowChangeEvent(CType(e.Row,CM_PATIENT_CONTACT_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CM_PATIENT_CONTACT_DOCRowChangingEvent) Is Nothing) Then
                RaiseEvent CM_PATIENT_CONTACT_DOCRowChanging(Me, New CM_PATIENT_CONTACT_DOCRowChangeEvent(CType(e.Row,CM_PATIENT_CONTACT_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CM_PATIENT_CONTACT_DOCRowDeletedEvent) Is Nothing) Then
                RaiseEvent CM_PATIENT_CONTACT_DOCRowDeleted(Me, New CM_PATIENT_CONTACT_DOCRowChangeEvent(CType(e.Row,CM_PATIENT_CONTACT_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CM_PATIENT_CONTACT_DOCRowDeletingEvent) Is Nothing) Then
                RaiseEvent CM_PATIENT_CONTACT_DOCRowDeleting(Me, New CM_PATIENT_CONTACT_DOCRowChangeEvent(CType(e.Row,CM_PATIENT_CONTACT_DOCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveCM_PATIENT_CONTACT_DOCRow(ByVal row As CM_PATIENT_CONTACT_DOCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As _VBE_DatamartDataSet2 = New _VBE_DatamartDataSet2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CM_PATIENT_CONTACT_DOCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CM_PATIENT_CONTACT_DOCRow
        Inherits Global.System.Data.DataRow
        
        Private tableCM_PATIENT_CONTACT_DOC As CM_PATIENT_CONTACT_DOCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCM_PATIENT_CONTACT_DOC = CType(Me.Table,CM_PATIENT_CONTACT_DOCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property PATIENT_ID() As Long
            Get
                Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.PATIENT_IDColumn),Long)
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.PATIENT_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OUTREACH_DATE() As Date
            Get
                Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.OUTREACH_DATEColumn),Date)
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.OUTREACH_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OUTREACH_ENTRY_DATETIME() As Date
            Get
                Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.OUTREACH_ENTRY_DATETIMEColumn),Date)
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.OUTREACH_ENTRY_DATETIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OUTREACH_CONTACT_PERSON() As String
            Get
                Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.OUTREACH_CONTACT_PERSONColumn),String)
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.OUTREACH_CONTACT_PERSONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property OUTREACH_CONTACT_PERSON_NAME() As String
            Get
                Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.OUTREACH_CONTACT_PERSON_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.OUTREACH_CONTACT_PERSON_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property REASON_FOR_OUTREACH() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.REASON_FOR_OUTREACHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REASON_FOR_OUTREACH' in table 'CM_PATIENT_CONTACT_DOC' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.REASON_FOR_OUTREACHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CONTACT_MADE_IND() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.CONTACT_MADE_INDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACT_MADE_IND' in table 'CM_PATIENT_CONTACT_DOC' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.CONTACT_MADE_INDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CONTACT_NOT_MADE_IND() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.CONTACT_NOT_MADE_INDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACT_NOT_MADE_IND' in table 'CM_PATIENT_CONTACT_DOC' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.CONTACT_NOT_MADE_INDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property RETURN_CALL_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.RETURN_CALL_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RETURN_CALL_DATE' in table 'CM_PATIENT_CONTACT_DOC' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.RETURN_CALL_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property APPOINTMENT_DATE_RESULT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.APPOINTMENT_DATE_RESULTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APPOINTMENT_DATE_RESULT' in table 'CM_PATIENT_CONTACT_DOC' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.APPOINTMENT_DATE_RESULTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DD_NOT_CONTACT_FLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.DD_NOT_CONTACT_FLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DD_NOT_CONTACT_FLAG' in table 'CM_PATIENT_CONTACT_DOC' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.DD_NOT_CONTACT_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE' in table 'CM_PATIE"& _ 
                            "NT_CONTACT_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NETWORK_PATIENT_ADDR_LINE_1() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_ADDR_LINE_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NETWORK_PATIENT_ADDR_LINE_1' in table 'CM_PATIENT_CONTACT_D"& _ 
                            "OC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_ADDR_LINE_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NETWORK_PATIENT_ADDR_LINE_2() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_ADDR_LINE_2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NETWORK_PATIENT_ADDR_LINE_2' in table 'CM_PATIENT_CONTACT_D"& _ 
                            "OC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_ADDR_LINE_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NETWORK_PATIENT_CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NETWORK_PATIENT_CITY' in table 'CM_PATIENT_CONTACT_DOC' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NETWORK_PATIENT_STATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_STATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NETWORK_PATIENT_STATE' in table 'CM_PATIENT_CONTACT_DOC' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_STATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NETWORK_PATIENT_ZIP_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_ZIP_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NETWORK_PATIENT_ZIP_CODE' in table 'CM_PATIENT_CONTACT_DOC'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_ZIP_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NETWORK_PATIENT_HOME_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_HOME_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NETWORK_PATIENT_HOME_PHONE' in table 'CM_PATIENT_CONTACT_DO"& _ 
                            "C' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_HOME_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NETWORK_PATIENT_WORK_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_WORK_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NETWORK_PATIENT_WORK_PHONE' in table 'CM_PATIENT_CONTACT_DO"& _ 
                            "C' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_WORK_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NETWORK_PATIENT_MOBILE_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_MOBILE_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NETWORK_PATIENT_MOBILE_PHONE' in table 'CM_PATIENT_CONTACT_"& _ 
                            "DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_MOBILE_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NETWORK_PATIENT_EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NETWORK_PATIENT_EMAIL' in table 'CM_PATIENT_CONTACT_DOC' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ACTIVE_PATIENT_FLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.ACTIVE_PATIENT_FLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTIVE_PATIENT_FLAG' in table 'CM_PATIENT_CONTACT_DOC' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.ACTIVE_PATIENT_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTE' in table 'CM_PATIENT_CONTACT_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATUS' in table 'CM_PATIENT_CONTACT_DOC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property MAX_ATTRIBUTION_MONTH() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.MAX_ATTRIBUTION_MONTHColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAX_ATTRIBUTION_MONTH' in table 'CM_PATIENT_CONTACT_DOC' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.MAX_ATTRIBUTION_MONTHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property LAST_REVISE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCM_PATIENT_CONTACT_DOC.LAST_REVISE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LAST_REVISE_DATE' in table 'CM_PATIENT_CONTACT_DOC' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCM_PATIENT_CONTACT_DOC.LAST_REVISE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsREASON_FOR_OUTREACHNull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.REASON_FOR_OUTREACHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetREASON_FOR_OUTREACHNull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.REASON_FOR_OUTREACHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCONTACT_MADE_INDNull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.CONTACT_MADE_INDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCONTACT_MADE_INDNull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.CONTACT_MADE_INDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCONTACT_NOT_MADE_INDNull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.CONTACT_NOT_MADE_INDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCONTACT_NOT_MADE_INDNull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.CONTACT_NOT_MADE_INDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsRETURN_CALL_DATENull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.RETURN_CALL_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetRETURN_CALL_DATENull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.RETURN_CALL_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsAPPOINTMENT_DATE_RESULTNull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.APPOINTMENT_DATE_RESULTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetAPPOINTMENT_DATE_RESULTNull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.APPOINTMENT_DATE_RESULTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsDD_NOT_CONTACT_FLAGNull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.DD_NOT_CONTACT_FLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetDD_NOT_CONTACT_FLAGNull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.DD_NOT_CONTACT_FLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsCASE_MANAGEMENT_PATIENT_REFERRAL_SOURCENull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetCASE_MANAGEMENT_PATIENT_REFERRAL_SOURCENull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNETWORK_PATIENT_ADDR_LINE_1Null() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_ADDR_LINE_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNETWORK_PATIENT_ADDR_LINE_1Null()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_ADDR_LINE_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNETWORK_PATIENT_ADDR_LINE_2Null() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_ADDR_LINE_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNETWORK_PATIENT_ADDR_LINE_2Null()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_ADDR_LINE_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNETWORK_PATIENT_CITYNull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNETWORK_PATIENT_CITYNull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNETWORK_PATIENT_STATENull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_STATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNETWORK_PATIENT_STATENull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_STATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNETWORK_PATIENT_ZIP_CODENull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_ZIP_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNETWORK_PATIENT_ZIP_CODENull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_ZIP_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNETWORK_PATIENT_HOME_PHONENull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_HOME_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNETWORK_PATIENT_HOME_PHONENull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_HOME_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNETWORK_PATIENT_WORK_PHONENull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_WORK_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNETWORK_PATIENT_WORK_PHONENull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_WORK_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNETWORK_PATIENT_MOBILE_PHONENull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_MOBILE_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNETWORK_PATIENT_MOBILE_PHONENull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_MOBILE_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNETWORK_PATIENT_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNETWORK_PATIENT_EMAILNull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.NETWORK_PATIENT_EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsACTIVE_PATIENT_FLAGNull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.ACTIVE_PATIENT_FLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetACTIVE_PATIENT_FLAGNull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.ACTIVE_PATIENT_FLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNOTENull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNOTENull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsSTATUSNull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetSTATUSNull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsMAX_ATTRIBUTION_MONTHNull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.MAX_ATTRIBUTION_MONTHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetMAX_ATTRIBUTION_MONTHNull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.MAX_ATTRIBUTION_MONTHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsLAST_REVISE_DATENull() As Boolean
            Return Me.IsNull(Me.tableCM_PATIENT_CONTACT_DOC.LAST_REVISE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetLAST_REVISE_DATENull()
            Me(Me.tableCM_PATIENT_CONTACT_DOC.LAST_REVISE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class CM_PATIENT_CONTACT_DOCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CM_PATIENT_CONTACT_DOCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As CM_PATIENT_CONTACT_DOCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As CM_PATIENT_CONTACT_DOCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace _VBE_DatamartDataSet2TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CM_PATIENT_CONTACT_DOCTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CM_PATIENT_CONTACT_DOC"
            tableMapping.ColumnMappings.Add("PATIENT_ID", "PATIENT_ID")
            tableMapping.ColumnMappings.Add("OUTREACH_DATE", "OUTREACH_DATE")
            tableMapping.ColumnMappings.Add("OUTREACH_ENTRY_DATETIME", "OUTREACH_ENTRY_DATETIME")
            tableMapping.ColumnMappings.Add("OUTREACH_CONTACT_PERSON", "OUTREACH_CONTACT_PERSON")
            tableMapping.ColumnMappings.Add("OUTREACH_CONTACT_PERSON_NAME", "OUTREACH_CONTACT_PERSON_NAME")
            tableMapping.ColumnMappings.Add("REASON_FOR_OUTREACH", "REASON_FOR_OUTREACH")
            tableMapping.ColumnMappings.Add("CONTACT_MADE_IND", "CONTACT_MADE_IND")
            tableMapping.ColumnMappings.Add("CONTACT_NOT_MADE_IND", "CONTACT_NOT_MADE_IND")
            tableMapping.ColumnMappings.Add("RETURN_CALL_DATE", "RETURN_CALL_DATE")
            tableMapping.ColumnMappings.Add("APPOINTMENT_DATE_RESULT", "APPOINTMENT_DATE_RESULT")
            tableMapping.ColumnMappings.Add("DD_NOT_CONTACT_FLAG", "DD_NOT_CONTACT_FLAG")
            tableMapping.ColumnMappings.Add("CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", "CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE")
            tableMapping.ColumnMappings.Add("NETWORK_PATIENT_ADDR_LINE_1", "NETWORK_PATIENT_ADDR_LINE_1")
            tableMapping.ColumnMappings.Add("NETWORK_PATIENT_ADDR_LINE_2", "NETWORK_PATIENT_ADDR_LINE_2")
            tableMapping.ColumnMappings.Add("NETWORK_PATIENT_CITY", "NETWORK_PATIENT_CITY")
            tableMapping.ColumnMappings.Add("NETWORK_PATIENT_STATE", "NETWORK_PATIENT_STATE")
            tableMapping.ColumnMappings.Add("NETWORK_PATIENT_ZIP_CODE", "NETWORK_PATIENT_ZIP_CODE")
            tableMapping.ColumnMappings.Add("NETWORK_PATIENT_HOME_PHONE", "NETWORK_PATIENT_HOME_PHONE")
            tableMapping.ColumnMappings.Add("NETWORK_PATIENT_WORK_PHONE", "NETWORK_PATIENT_WORK_PHONE")
            tableMapping.ColumnMappings.Add("NETWORK_PATIENT_MOBILE_PHONE", "NETWORK_PATIENT_MOBILE_PHONE")
            tableMapping.ColumnMappings.Add("NETWORK_PATIENT_EMAIL", "NETWORK_PATIENT_EMAIL")
            tableMapping.ColumnMappings.Add("ACTIVE_PATIENT_FLAG", "ACTIVE_PATIENT_FLAG")
            tableMapping.ColumnMappings.Add("NOTE", "NOTE")
            tableMapping.ColumnMappings.Add("STATUS", "STATUS")
            tableMapping.ColumnMappings.Add("MAX_ATTRIBUTION_MONTH", "MAX_ATTRIBUTION_MONTH")
            tableMapping.ColumnMappings.Add("LAST_REVISE_DATE", "LAST_REVISE_DATE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CM_PATIENT_CONTACT_DOC] WHERE (([PATIENT_ID] = @Original_PATIE"& _ 
                "NT_ID) AND ([OUTREACH_DATE] = @Original_OUTREACH_DATE) AND ([OUTREACH_ENTRY_DATE"& _ 
                "TIME] = @Original_OUTREACH_ENTRY_DATETIME) AND ([OUTREACH_CONTACT_PERSON] = @Ori"& _ 
                "ginal_OUTREACH_CONTACT_PERSON) AND ([OUTREACH_CONTACT_PERSON_NAME] = @Original_O"& _ 
                "UTREACH_CONTACT_PERSON_NAME) AND ((@IsNull_REASON_FOR_OUTREACH = 1 AND [REASON_F"& _ 
                "OR_OUTREACH] IS NULL) OR ([REASON_FOR_OUTREACH] = @Original_REASON_FOR_OUTREACH)"& _ 
                ") AND ((@IsNull_CONTACT_MADE_IND = 1 AND [CONTACT_MADE_IND] IS NULL) OR ([CONTAC"& _ 
                "T_MADE_IND] = @Original_CONTACT_MADE_IND)) AND ((@IsNull_CONTACT_NOT_MADE_IND = "& _ 
                "1 AND [CONTACT_NOT_MADE_IND] IS NULL) OR ([CONTACT_NOT_MADE_IND] = @Original_CON"& _ 
                "TACT_NOT_MADE_IND)) AND ((@IsNull_RETURN_CALL_DATE = 1 AND [RETURN_CALL_DATE] IS"& _ 
                " NULL) OR ([RETURN_CALL_DATE] = @Original_RETURN_CALL_DATE)) AND ((@IsNull_APPOI"& _ 
                "NTMENT_DATE_RESULT = 1 AND [APPOINTMENT_DATE_RESULT] IS NULL) OR ([APPOINTMENT_D"& _ 
                "ATE_RESULT] = @Original_APPOINTMENT_DATE_RESULT)) AND ((@IsNull_DD_NOT_CONTACT_F"& _ 
                "LAG = 1 AND [DD_NOT_CONTACT_FLAG] IS NULL) OR ([DD_NOT_CONTACT_FLAG] = @Original"& _ 
                "_DD_NOT_CONTACT_FLAG)) AND ((@IsNull_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE = 1"& _ 
                " AND [CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE] IS NULL) OR ([CASE_MANAGEMENT_PAT"& _ 
                "IENT_REFERRAL_SOURCE] = @Original_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE)) AND "& _ 
                "((@IsNull_NETWORK_PATIENT_ADDR_LINE_1 = 1 AND [NETWORK_PATIENT_ADDR_LINE_1] IS N"& _ 
                "ULL) OR ([NETWORK_PATIENT_ADDR_LINE_1] = @Original_NETWORK_PATIENT_ADDR_LINE_1))"& _ 
                " AND ((@IsNull_NETWORK_PATIENT_ADDR_LINE_2 = 1 AND [NETWORK_PATIENT_ADDR_LINE_2]"& _ 
                " IS NULL) OR ([NETWORK_PATIENT_ADDR_LINE_2] = @Original_NETWORK_PATIENT_ADDR_LIN"& _ 
                "E_2)) AND ((@IsNull_NETWORK_PATIENT_CITY = 1 AND [NETWORK_PATIENT_CITY] IS NULL)"& _ 
                " OR ([NETWORK_PATIENT_CITY] = @Original_NETWORK_PATIENT_CITY)) AND ((@IsNull_NET"& _ 
                "WORK_PATIENT_STATE = 1 AND [NETWORK_PATIENT_STATE] IS NULL) OR ([NETWORK_PATIENT"& _ 
                "_STATE] = @Original_NETWORK_PATIENT_STATE)) AND ((@IsNull_NETWORK_PATIENT_ZIP_CO"& _ 
                "DE = 1 AND [NETWORK_PATIENT_ZIP_CODE] IS NULL) OR ([NETWORK_PATIENT_ZIP_CODE] = "& _ 
                "@Original_NETWORK_PATIENT_ZIP_CODE)) AND ((@IsNull_NETWORK_PATIENT_HOME_PHONE = "& _ 
                "1 AND [NETWORK_PATIENT_HOME_PHONE] IS NULL) OR ([NETWORK_PATIENT_HOME_PHONE] = @"& _ 
                "Original_NETWORK_PATIENT_HOME_PHONE)) AND ((@IsNull_NETWORK_PATIENT_WORK_PHONE ="& _ 
                " 1 AND [NETWORK_PATIENT_WORK_PHONE] IS NULL) OR ([NETWORK_PATIENT_WORK_PHONE] = "& _ 
                "@Original_NETWORK_PATIENT_WORK_PHONE)) AND ((@IsNull_NETWORK_PATIENT_MOBILE_PHON"& _ 
                "E = 1 AND [NETWORK_PATIENT_MOBILE_PHONE] IS NULL) OR ([NETWORK_PATIENT_MOBILE_PH"& _ 
                "ONE] = @Original_NETWORK_PATIENT_MOBILE_PHONE)) AND ((@IsNull_NETWORK_PATIENT_EM"& _ 
                "AIL = 1 AND [NETWORK_PATIENT_EMAIL] IS NULL) OR ([NETWORK_PATIENT_EMAIL] = @Orig"& _ 
                "inal_NETWORK_PATIENT_EMAIL)) AND ((@IsNull_ACTIVE_PATIENT_FLAG = 1 AND [ACTIVE_P"& _ 
                "ATIENT_FLAG] IS NULL) OR ([ACTIVE_PATIENT_FLAG] = @Original_ACTIVE_PATIENT_FLAG)"& _ 
                ") AND ((@IsNull_NOTE = 1 AND [NOTE] IS NULL) OR ([NOTE] = @Original_NOTE)) AND ("& _ 
                "(@IsNull_STATUS = 1 AND [STATUS] IS NULL) OR ([STATUS] = @Original_STATUS)) AND "& _ 
                "((@IsNull_MAX_ATTRIBUTION_MONTH = 1 AND [MAX_ATTRIBUTION_MONTH] IS NULL) OR ([MA"& _ 
                "X_ATTRIBUTION_MONTH] = @Original_MAX_ATTRIBUTION_MONTH)) AND ((@IsNull_LAST_REVI"& _ 
                "SE_DATE = 1 AND [LAST_REVISE_DATE] IS NULL) OR ([LAST_REVISE_DATE] = @Original_L"& _ 
                "AST_REVISE_DATE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_ID", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OUTREACH_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OUTREACH_ENTRY_DATETIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_ENTRY_DATETIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OUTREACH_CONTACT_PERSON", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_CONTACT_PERSON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OUTREACH_CONTACT_PERSON_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_CONTACT_PERSON_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REASON_FOR_OUTREACH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REASON_FOR_OUTREACH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REASON_FOR_OUTREACH", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REASON_FOR_OUTREACH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONTACT_MADE_IND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACT_MADE_IND", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONTACT_MADE_IND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACT_MADE_IND", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONTACT_NOT_MADE_IND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NOT_MADE_IND", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONTACT_NOT_MADE_IND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NOT_MADE_IND", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RETURN_CALL_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETURN_CALL_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RETURN_CALL_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETURN_CALL_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_APPOINTMENT_DATE_RESULT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APPOINTMENT_DATE_RESULT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_APPOINTMENT_DATE_RESULT", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APPOINTMENT_DATE_RESULT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DD_NOT_CONTACT_FLAG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DD_NOT_CONTACT_FLAG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DD_NOT_CONTACT_FLAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DD_NOT_CONTACT_FLAG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_ADDR_LINE_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ADDR_LINE_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_ADDR_LINE_1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ADDR_LINE_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_ADDR_LINE_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ADDR_LINE_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_ADDR_LINE_2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ADDR_LINE_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_CITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_CITY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_CITY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_CITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_STATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_STATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_STATE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_STATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_ZIP_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ZIP_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_ZIP_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ZIP_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_HOME_PHONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_HOME_PHONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_HOME_PHONE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_HOME_PHONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_WORK_PHONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_WORK_PHONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_WORK_PHONE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_WORK_PHONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_MOBILE_PHONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_MOBILE_PHONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_MOBILE_PHONE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_MOBILE_PHONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_EMAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_EMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACTIVE_PATIENT_FLAG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_PATIENT_FLAG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACTIVE_PATIENT_FLAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_PATIENT_FLAG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NOTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STATUS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MAX_ATTRIBUTION_MONTH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAX_ATTRIBUTION_MONTH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MAX_ATTRIBUTION_MONTH", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 0, "MAX_ATTRIBUTION_MONTH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LAST_REVISE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LAST_REVISE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LAST_REVISE_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LAST_REVISE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CM_PATIENT_CONTACT_DOC] ([PATIENT_ID], [OUTREACH_DATE], [OUTRE"& _ 
                "ACH_ENTRY_DATETIME], [OUTREACH_CONTACT_PERSON], [OUTREACH_CONTACT_PERSON_NAME], "& _ 
                "[REASON_FOR_OUTREACH], [CONTACT_MADE_IND], [CONTACT_NOT_MADE_IND], [RETURN_CALL_"& _ 
                "DATE], [APPOINTMENT_DATE_RESULT], [DD_NOT_CONTACT_FLAG], [CASE_MANAGEMENT_PATIEN"& _ 
                "T_REFERRAL_SOURCE], [NETWORK_PATIENT_ADDR_LINE_1], [NETWORK_PATIENT_ADDR_LINE_2]"& _ 
                ", [NETWORK_PATIENT_CITY], [NETWORK_PATIENT_STATE], [NETWORK_PATIENT_ZIP_CODE], ["& _ 
                "NETWORK_PATIENT_HOME_PHONE], [NETWORK_PATIENT_WORK_PHONE], [NETWORK_PATIENT_MOBI"& _ 
                "LE_PHONE], [NETWORK_PATIENT_EMAIL], [ACTIVE_PATIENT_FLAG], [NOTE], [STATUS], [MA"& _ 
                "X_ATTRIBUTION_MONTH], [LAST_REVISE_DATE]) VALUES (@PATIENT_ID, @OUTREACH_DATE, @"& _ 
                "OUTREACH_ENTRY_DATETIME, @OUTREACH_CONTACT_PERSON, @OUTREACH_CONTACT_PERSON_NAME"& _ 
                ", @REASON_FOR_OUTREACH, @CONTACT_MADE_IND, @CONTACT_NOT_MADE_IND, @RETURN_CALL_D"& _ 
                "ATE, @APPOINTMENT_DATE_RESULT, @DD_NOT_CONTACT_FLAG, @CASE_MANAGEMENT_PATIENT_RE"& _ 
                "FERRAL_SOURCE, @NETWORK_PATIENT_ADDR_LINE_1, @NETWORK_PATIENT_ADDR_LINE_2, @NETW"& _ 
                "ORK_PATIENT_CITY, @NETWORK_PATIENT_STATE, @NETWORK_PATIENT_ZIP_CODE, @NETWORK_PA"& _ 
                "TIENT_HOME_PHONE, @NETWORK_PATIENT_WORK_PHONE, @NETWORK_PATIENT_MOBILE_PHONE, @N"& _ 
                "ETWORK_PATIENT_EMAIL, @ACTIVE_PATIENT_FLAG, @NOTE, @STATUS, @MAX_ATTRIBUTION_MON"& _ 
                "TH, @LAST_REVISE_DATE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PATIENT_ID, OUTREACH_DATE, OUTREACH_ENTRY_DATETI"& _ 
                "ME, OUTREACH_CONTACT_PERSON, OUTREACH_CONTACT_PERSON_NAME, REASON_FOR_OUTREACH, "& _ 
                "CONTACT_MADE_IND, CONTACT_NOT_MADE_IND, RETURN_CALL_DATE, APPOINTMENT_DATE_RESUL"& _ 
                "T, DD_NOT_CONTACT_FLAG, CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE, NETWORK_PATIENT"& _ 
                "_ADDR_LINE_1, NETWORK_PATIENT_ADDR_LINE_2, NETWORK_PATIENT_CITY, NETWORK_PATIENT"& _ 
                "_STATE, NETWORK_PATIENT_ZIP_CODE, NETWORK_PATIENT_HOME_PHONE, NETWORK_PATIENT_WO"& _ 
                "RK_PHONE, NETWORK_PATIENT_MOBILE_PHONE, NETWORK_PATIENT_EMAIL, ACTIVE_PATIENT_FL"& _ 
                "AG, NOTE, STATUS, MAX_ATTRIBUTION_MONTH, LAST_REVISE_DATE FROM CM_PATIENT_CONTAC"& _ 
                "T_DOC WHERE (OUTREACH_DATE = @OUTREACH_DATE) AND (OUTREACH_ENTRY_DATETIME = @OUT"& _ 
                "REACH_ENTRY_DATETIME) AND (PATIENT_ID = @PATIENT_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_ID", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OUTREACH_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OUTREACH_ENTRY_DATETIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_ENTRY_DATETIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OUTREACH_CONTACT_PERSON", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_CONTACT_PERSON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OUTREACH_CONTACT_PERSON_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_CONTACT_PERSON_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REASON_FOR_OUTREACH", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REASON_FOR_OUTREACH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTACT_MADE_IND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACT_MADE_IND", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTACT_NOT_MADE_IND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NOT_MADE_IND", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_CALL_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETURN_CALL_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APPOINTMENT_DATE_RESULT", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APPOINTMENT_DATE_RESULT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DD_NOT_CONTACT_FLAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DD_NOT_CONTACT_FLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_ADDR_LINE_1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ADDR_LINE_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_ADDR_LINE_2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ADDR_LINE_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_CITY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_CITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_STATE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_STATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_ZIP_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ZIP_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_HOME_PHONE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_HOME_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_WORK_PHONE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_WORK_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_MOBILE_PHONE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_MOBILE_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_EMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACTIVE_PATIENT_FLAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_PATIENT_FLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STATUS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAX_ATTRIBUTION_MONTH", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 0, "MAX_ATTRIBUTION_MONTH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LAST_REVISE_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LAST_REVISE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CM_PATIENT_CONTACT_DOC] SET [PATIENT_ID] = @PATIENT_ID, [OUTREACH_D"& _ 
                "ATE] = @OUTREACH_DATE, [OUTREACH_ENTRY_DATETIME] = @OUTREACH_ENTRY_DATETIME, [OU"& _ 
                "TREACH_CONTACT_PERSON] = @OUTREACH_CONTACT_PERSON, [OUTREACH_CONTACT_PERSON_NAME"& _ 
                "] = @OUTREACH_CONTACT_PERSON_NAME, [REASON_FOR_OUTREACH] = @REASON_FOR_OUTREACH,"& _ 
                " [CONTACT_MADE_IND] = @CONTACT_MADE_IND, [CONTACT_NOT_MADE_IND] = @CONTACT_NOT_M"& _ 
                "ADE_IND, [RETURN_CALL_DATE] = @RETURN_CALL_DATE, [APPOINTMENT_DATE_RESULT] = @AP"& _ 
                "POINTMENT_DATE_RESULT, [DD_NOT_CONTACT_FLAG] = @DD_NOT_CONTACT_FLAG, [CASE_MANAG"& _ 
                "EMENT_PATIENT_REFERRAL_SOURCE] = @CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE, [NETW"& _ 
                "ORK_PATIENT_ADDR_LINE_1] = @NETWORK_PATIENT_ADDR_LINE_1, [NETWORK_PATIENT_ADDR_L"& _ 
                "INE_2] = @NETWORK_PATIENT_ADDR_LINE_2, [NETWORK_PATIENT_CITY] = @NETWORK_PATIENT"& _ 
                "_CITY, [NETWORK_PATIENT_STATE] = @NETWORK_PATIENT_STATE, [NETWORK_PATIENT_ZIP_CO"& _ 
                "DE] = @NETWORK_PATIENT_ZIP_CODE, [NETWORK_PATIENT_HOME_PHONE] = @NETWORK_PATIENT"& _ 
                "_HOME_PHONE, [NETWORK_PATIENT_WORK_PHONE] = @NETWORK_PATIENT_WORK_PHONE, [NETWOR"& _ 
                "K_PATIENT_MOBILE_PHONE] = @NETWORK_PATIENT_MOBILE_PHONE, [NETWORK_PATIENT_EMAIL]"& _ 
                " = @NETWORK_PATIENT_EMAIL, [ACTIVE_PATIENT_FLAG] = @ACTIVE_PATIENT_FLAG, [NOTE] "& _ 
                "= @NOTE, [STATUS] = @STATUS, [MAX_ATTRIBUTION_MONTH] = @MAX_ATTRIBUTION_MONTH, ["& _ 
                "LAST_REVISE_DATE] = @LAST_REVISE_DATE WHERE (([PATIENT_ID] = @Original_PATIENT_I"& _ 
                "D) AND ([OUTREACH_DATE] = @Original_OUTREACH_DATE) AND ([OUTREACH_ENTRY_DATETIME"& _ 
                "] = @Original_OUTREACH_ENTRY_DATETIME) AND ([OUTREACH_CONTACT_PERSON] = @Origina"& _ 
                "l_OUTREACH_CONTACT_PERSON) AND ([OUTREACH_CONTACT_PERSON_NAME] = @Original_OUTRE"& _ 
                "ACH_CONTACT_PERSON_NAME) AND ((@IsNull_REASON_FOR_OUTREACH = 1 AND [REASON_FOR_O"& _ 
                "UTREACH] IS NULL) OR ([REASON_FOR_OUTREACH] = @Original_REASON_FOR_OUTREACH)) AN"& _ 
                "D ((@IsNull_CONTACT_MADE_IND = 1 AND [CONTACT_MADE_IND] IS NULL) OR ([CONTACT_MA"& _ 
                "DE_IND] = @Original_CONTACT_MADE_IND)) AND ((@IsNull_CONTACT_NOT_MADE_IND = 1 AN"& _ 
                "D [CONTACT_NOT_MADE_IND] IS NULL) OR ([CONTACT_NOT_MADE_IND] = @Original_CONTACT"& _ 
                "_NOT_MADE_IND)) AND ((@IsNull_RETURN_CALL_DATE = 1 AND [RETURN_CALL_DATE] IS NUL"& _ 
                "L) OR ([RETURN_CALL_DATE] = @Original_RETURN_CALL_DATE)) AND ((@IsNull_APPOINTME"& _ 
                "NT_DATE_RESULT = 1 AND [APPOINTMENT_DATE_RESULT] IS NULL) OR ([APPOINTMENT_DATE_"& _ 
                "RESULT] = @Original_APPOINTMENT_DATE_RESULT)) AND ((@IsNull_DD_NOT_CONTACT_FLAG "& _ 
                "= 1 AND [DD_NOT_CONTACT_FLAG] IS NULL) OR ([DD_NOT_CONTACT_FLAG] = @Original_DD_"& _ 
                "NOT_CONTACT_FLAG)) AND ((@IsNull_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE = 1 AND"& _ 
                " [CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE] IS NULL) OR ([CASE_MANAGEMENT_PATIENT"& _ 
                "_REFERRAL_SOURCE] = @Original_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE)) AND ((@I"& _ 
                "sNull_NETWORK_PATIENT_ADDR_LINE_1 = 1 AND [NETWORK_PATIENT_ADDR_LINE_1] IS NULL)"& _ 
                " OR ([NETWORK_PATIENT_ADDR_LINE_1] = @Original_NETWORK_PATIENT_ADDR_LINE_1)) AND"& _ 
                " ((@IsNull_NETWORK_PATIENT_ADDR_LINE_2 = 1 AND [NETWORK_PATIENT_ADDR_LINE_2] IS "& _ 
                "NULL) OR ([NETWORK_PATIENT_ADDR_LINE_2] = @Original_NETWORK_PATIENT_ADDR_LINE_2)"& _ 
                ") AND ((@IsNull_NETWORK_PATIENT_CITY = 1 AND [NETWORK_PATIENT_CITY] IS NULL) OR "& _ 
                "([NETWORK_PATIENT_CITY] = @Original_NETWORK_PATIENT_CITY)) AND ((@IsNull_NETWORK"& _ 
                "_PATIENT_STATE = 1 AND [NETWORK_PATIENT_STATE] IS NULL) OR ([NETWORK_PATIENT_STA"& _ 
                "TE] = @Original_NETWORK_PATIENT_STATE)) AND ((@IsNull_NETWORK_PATIENT_ZIP_CODE ="& _ 
                " 1 AND [NETWORK_PATIENT_ZIP_CODE] IS NULL) OR ([NETWORK_PATIENT_ZIP_CODE] = @Ori"& _ 
                "ginal_NETWORK_PATIENT_ZIP_CODE)) AND ((@IsNull_NETWORK_PATIENT_HOME_PHONE = 1 AN"& _ 
                "D [NETWORK_PATIENT_HOME_PHONE] IS NULL) OR ([NETWORK_PATIENT_HOME_PHONE] = @Orig"& _ 
                "inal_NETWORK_PATIENT_HOME_PHONE)) AND ((@IsNull_NETWORK_PATIENT_WORK_PHONE = 1 A"& _ 
                "ND [NETWORK_PATIENT_WORK_PHONE] IS NULL) OR ([NETWORK_PATIENT_WORK_PHONE] = @Ori"& _ 
                "ginal_NETWORK_PATIENT_WORK_PHONE)) AND ((@IsNull_NETWORK_PATIENT_MOBILE_PHONE = "& _ 
                "1 AND [NETWORK_PATIENT_MOBILE_PHONE] IS NULL) OR ([NETWORK_PATIENT_MOBILE_PHONE]"& _ 
                " = @Original_NETWORK_PATIENT_MOBILE_PHONE)) AND ((@IsNull_NETWORK_PATIENT_EMAIL "& _ 
                "= 1 AND [NETWORK_PATIENT_EMAIL] IS NULL) OR ([NETWORK_PATIENT_EMAIL] = @Original"& _ 
                "_NETWORK_PATIENT_EMAIL)) AND ((@IsNull_ACTIVE_PATIENT_FLAG = 1 AND [ACTIVE_PATIE"& _ 
                "NT_FLAG] IS NULL) OR ([ACTIVE_PATIENT_FLAG] = @Original_ACTIVE_PATIENT_FLAG)) AN"& _ 
                "D ((@IsNull_NOTE = 1 AND [NOTE] IS NULL) OR ([NOTE] = @Original_NOTE)) AND ((@Is"& _ 
                "Null_STATUS = 1 AND [STATUS] IS NULL) OR ([STATUS] = @Original_STATUS)) AND ((@I"& _ 
                "sNull_MAX_ATTRIBUTION_MONTH = 1 AND [MAX_ATTRIBUTION_MONTH] IS NULL) OR ([MAX_AT"& _ 
                "TRIBUTION_MONTH] = @Original_MAX_ATTRIBUTION_MONTH)) AND ((@IsNull_LAST_REVISE_D"& _ 
                "ATE = 1 AND [LAST_REVISE_DATE] IS NULL) OR ([LAST_REVISE_DATE] = @Original_LAST_"& _ 
                "REVISE_DATE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PATIENT_ID, OUTREACH_DATE, OUTREACH_ENTRY_DATETIME, OUTR"& _ 
                "EACH_CONTACT_PERSON, OUTREACH_CONTACT_PERSON_NAME, REASON_FOR_OUTREACH, CONTACT_"& _ 
                "MADE_IND, CONTACT_NOT_MADE_IND, RETURN_CALL_DATE, APPOINTMENT_DATE_RESULT, DD_NO"& _ 
                "T_CONTACT_FLAG, CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE, NETWORK_PATIENT_ADDR_LI"& _ 
                "NE_1, NETWORK_PATIENT_ADDR_LINE_2, NETWORK_PATIENT_CITY, NETWORK_PATIENT_STATE, "& _ 
                "NETWORK_PATIENT_ZIP_CODE, NETWORK_PATIENT_HOME_PHONE, NETWORK_PATIENT_WORK_PHONE"& _ 
                ", NETWORK_PATIENT_MOBILE_PHONE, NETWORK_PATIENT_EMAIL, ACTIVE_PATIENT_FLAG, NOTE"& _ 
                ", STATUS, MAX_ATTRIBUTION_MONTH, LAST_REVISE_DATE FROM CM_PATIENT_CONTACT_DOC WH"& _ 
                "ERE (OUTREACH_DATE = @OUTREACH_DATE) AND (OUTREACH_ENTRY_DATETIME = @OUTREACH_EN"& _ 
                "TRY_DATETIME) AND (PATIENT_ID = @PATIENT_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_ID", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OUTREACH_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OUTREACH_ENTRY_DATETIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_ENTRY_DATETIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OUTREACH_CONTACT_PERSON", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_CONTACT_PERSON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OUTREACH_CONTACT_PERSON_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_CONTACT_PERSON_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REASON_FOR_OUTREACH", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REASON_FOR_OUTREACH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTACT_MADE_IND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACT_MADE_IND", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTACT_NOT_MADE_IND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NOT_MADE_IND", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_CALL_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETURN_CALL_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APPOINTMENT_DATE_RESULT", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APPOINTMENT_DATE_RESULT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DD_NOT_CONTACT_FLAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DD_NOT_CONTACT_FLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_ADDR_LINE_1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ADDR_LINE_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_ADDR_LINE_2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ADDR_LINE_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_CITY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_CITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_STATE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_STATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_ZIP_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ZIP_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_HOME_PHONE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_HOME_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_WORK_PHONE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_WORK_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_MOBILE_PHONE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_MOBILE_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NETWORK_PATIENT_EMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACTIVE_PATIENT_FLAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_PATIENT_FLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STATUS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAX_ATTRIBUTION_MONTH", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 0, "MAX_ATTRIBUTION_MONTH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LAST_REVISE_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LAST_REVISE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_ID", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OUTREACH_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OUTREACH_ENTRY_DATETIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_ENTRY_DATETIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OUTREACH_CONTACT_PERSON", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_CONTACT_PERSON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OUTREACH_CONTACT_PERSON_NAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OUTREACH_CONTACT_PERSON_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REASON_FOR_OUTREACH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REASON_FOR_OUTREACH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REASON_FOR_OUTREACH", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REASON_FOR_OUTREACH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONTACT_MADE_IND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACT_MADE_IND", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONTACT_MADE_IND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACT_MADE_IND", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONTACT_NOT_MADE_IND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NOT_MADE_IND", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONTACT_NOT_MADE_IND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACT_NOT_MADE_IND", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RETURN_CALL_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETURN_CALL_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RETURN_CALL_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETURN_CALL_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_APPOINTMENT_DATE_RESULT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APPOINTMENT_DATE_RESULT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_APPOINTMENT_DATE_RESULT", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APPOINTMENT_DATE_RESULT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DD_NOT_CONTACT_FLAG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DD_NOT_CONTACT_FLAG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DD_NOT_CONTACT_FLAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DD_NOT_CONTACT_FLAG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_ADDR_LINE_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ADDR_LINE_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_ADDR_LINE_1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ADDR_LINE_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_ADDR_LINE_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ADDR_LINE_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_ADDR_LINE_2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ADDR_LINE_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_CITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_CITY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_CITY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_CITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_STATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_STATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_STATE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_STATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_ZIP_CODE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ZIP_CODE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_ZIP_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_ZIP_CODE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_HOME_PHONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_HOME_PHONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_HOME_PHONE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_HOME_PHONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_WORK_PHONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_WORK_PHONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_WORK_PHONE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_WORK_PHONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_MOBILE_PHONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_MOBILE_PHONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_MOBILE_PHONE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_MOBILE_PHONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NETWORK_PATIENT_EMAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NETWORK_PATIENT_EMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NETWORK_PATIENT_EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ACTIVE_PATIENT_FLAG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_PATIENT_FLAG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ACTIVE_PATIENT_FLAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACTIVE_PATIENT_FLAG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NOTE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STATUS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MAX_ATTRIBUTION_MONTH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAX_ATTRIBUTION_MONTH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MAX_ATTRIBUTION_MONTH", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 10, 0, "MAX_ATTRIBUTION_MONTH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LAST_REVISE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LAST_REVISE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LAST_REVISE_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LAST_REVISE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.VBEDataAppV1._0.My.MySettings.Default.VBE_DatamartConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PATIENT_ID, OUTREACH_DATE, OUTREACH_ENTRY_DATETIME, OUTREACH_CONTACT_PERSO"& _ 
                "N, OUTREACH_CONTACT_PERSON_NAME, REASON_FOR_OUTREACH, CONTACT_MADE_IND, CONTACT_"& _ 
                "NOT_MADE_IND, RETURN_CALL_DATE, APPOINTMENT_DATE_RESULT, DD_NOT_CONTACT_FLAG, CA"& _ 
                "SE_MANAGEMENT_PATIENT_REFERRAL_SOURCE, NETWORK_PATIENT_ADDR_LINE_1, NETWORK_PATI"& _ 
                "ENT_ADDR_LINE_2, NETWORK_PATIENT_CITY, NETWORK_PATIENT_STATE, NETWORK_PATIENT_ZI"& _ 
                "P_CODE, NETWORK_PATIENT_HOME_PHONE, NETWORK_PATIENT_WORK_PHONE, NETWORK_PATIENT_"& _ 
                "MOBILE_PHONE, NETWORK_PATIENT_EMAIL, ACTIVE_PATIENT_FLAG, NOTE, STATUS, MAX_ATTR"& _ 
                "IBUTION_MONTH, LAST_REVISE_DATE FROM dbo.CM_PATIENT_CONTACT_DOC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As _VBE_DatamartDataSet2.CM_PATIENT_CONTACT_DOCDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As _VBE_DatamartDataSet2.CM_PATIENT_CONTACT_DOCDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As _VBE_DatamartDataSet2.CM_PATIENT_CONTACT_DOCDataTable = New _VBE_DatamartDataSet2.CM_PATIENT_CONTACT_DOCDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As _VBE_DatamartDataSet2.CM_PATIENT_CONTACT_DOCDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As _VBE_DatamartDataSet2) As Integer
            Return Me.Adapter.Update(dataSet, "CM_PATIENT_CONTACT_DOC")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_PATIENT_ID As Long,  _
                    ByVal Original_OUTREACH_DATE As Date,  _
                    ByVal Original_OUTREACH_ENTRY_DATETIME As Date,  _
                    ByVal Original_OUTREACH_CONTACT_PERSON As String,  _
                    ByVal Original_OUTREACH_CONTACT_PERSON_NAME As String,  _
                    ByVal Original_REASON_FOR_OUTREACH As String,  _
                    ByVal Original_CONTACT_MADE_IND As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CONTACT_NOT_MADE_IND As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RETURN_CALL_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_APPOINTMENT_DATE_RESULT As Global.System.Nullable(Of Date),  _
                    ByVal Original_DD_NOT_CONTACT_FLAG As String,  _
                    ByVal Original_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE As String,  _
                    ByVal Original_NETWORK_PATIENT_ADDR_LINE_1 As String,  _
                    ByVal Original_NETWORK_PATIENT_ADDR_LINE_2 As String,  _
                    ByVal Original_NETWORK_PATIENT_CITY As String,  _
                    ByVal Original_NETWORK_PATIENT_STATE As String,  _
                    ByVal Original_NETWORK_PATIENT_ZIP_CODE As String,  _
                    ByVal Original_NETWORK_PATIENT_HOME_PHONE As String,  _
                    ByVal Original_NETWORK_PATIENT_WORK_PHONE As String,  _
                    ByVal Original_NETWORK_PATIENT_MOBILE_PHONE As String,  _
                    ByVal Original_NETWORK_PATIENT_EMAIL As String,  _
                    ByVal Original_ACTIVE_PATIENT_FLAG As String,  _
                    ByVal Original_NOTE As String,  _
                    ByVal Original_STATUS As String,  _
                    ByVal Original_MAX_ATTRIBUTION_MONTH As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LAST_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PATIENT_ID,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_OUTREACH_DATE,Date)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_OUTREACH_ENTRY_DATETIME,Date)
            If (Original_OUTREACH_CONTACT_PERSON Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OUTREACH_CONTACT_PERSON")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_OUTREACH_CONTACT_PERSON,String)
            End If
            If (Original_OUTREACH_CONTACT_PERSON_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OUTREACH_CONTACT_PERSON_NAME")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_OUTREACH_CONTACT_PERSON_NAME,String)
            End If
            If (Original_REASON_FOR_OUTREACH Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_REASON_FOR_OUTREACH,String)
            End If
            If (Original_CONTACT_MADE_IND.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CONTACT_MADE_IND.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_CONTACT_NOT_MADE_IND.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_CONTACT_NOT_MADE_IND.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_RETURN_CALL_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_RETURN_CALL_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_APPOINTMENT_DATE_RESULT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_APPOINTMENT_DATE_RESULT.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_DD_NOT_CONTACT_FLAG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_DD_NOT_CONTACT_FLAG,String)
            End If
            If (Original_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE,String)
            End If
            If (Original_NETWORK_PATIENT_ADDR_LINE_1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_NETWORK_PATIENT_ADDR_LINE_1,String)
            End If
            If (Original_NETWORK_PATIENT_ADDR_LINE_2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_NETWORK_PATIENT_ADDR_LINE_2,String)
            End If
            If (Original_NETWORK_PATIENT_CITY Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_NETWORK_PATIENT_CITY,String)
            End If
            If (Original_NETWORK_PATIENT_STATE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_NETWORK_PATIENT_STATE,String)
            End If
            If (Original_NETWORK_PATIENT_ZIP_CODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_NETWORK_PATIENT_ZIP_CODE,String)
            End If
            If (Original_NETWORK_PATIENT_HOME_PHONE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_NETWORK_PATIENT_HOME_PHONE,String)
            End If
            If (Original_NETWORK_PATIENT_WORK_PHONE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_NETWORK_PATIENT_WORK_PHONE,String)
            End If
            If (Original_NETWORK_PATIENT_MOBILE_PHONE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_NETWORK_PATIENT_MOBILE_PHONE,String)
            End If
            If (Original_NETWORK_PATIENT_EMAIL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_NETWORK_PATIENT_EMAIL,String)
            End If
            If (Original_ACTIVE_PATIENT_FLAG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_ACTIVE_PATIENT_FLAG,String)
            End If
            If (Original_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_NOTE,String)
            End If
            If (Original_STATUS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_STATUS,String)
            End If
            If (Original_MAX_ATTRIBUTION_MONTH.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_MAX_ATTRIBUTION_MONTH.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_LAST_REVISE_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_LAST_REVISE_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PATIENT_ID As Long,  _
                    ByVal OUTREACH_DATE As Date,  _
                    ByVal OUTREACH_ENTRY_DATETIME As Date,  _
                    ByVal OUTREACH_CONTACT_PERSON As String,  _
                    ByVal OUTREACH_CONTACT_PERSON_NAME As String,  _
                    ByVal REASON_FOR_OUTREACH As String,  _
                    ByVal CONTACT_MADE_IND As Global.System.Nullable(Of Integer),  _
                    ByVal CONTACT_NOT_MADE_IND As Global.System.Nullable(Of Integer),  _
                    ByVal RETURN_CALL_DATE As Global.System.Nullable(Of Date),  _
                    ByVal APPOINTMENT_DATE_RESULT As Global.System.Nullable(Of Date),  _
                    ByVal DD_NOT_CONTACT_FLAG As String,  _
                    ByVal CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE As String,  _
                    ByVal NETWORK_PATIENT_ADDR_LINE_1 As String,  _
                    ByVal NETWORK_PATIENT_ADDR_LINE_2 As String,  _
                    ByVal NETWORK_PATIENT_CITY As String,  _
                    ByVal NETWORK_PATIENT_STATE As String,  _
                    ByVal NETWORK_PATIENT_ZIP_CODE As String,  _
                    ByVal NETWORK_PATIENT_HOME_PHONE As String,  _
                    ByVal NETWORK_PATIENT_WORK_PHONE As String,  _
                    ByVal NETWORK_PATIENT_MOBILE_PHONE As String,  _
                    ByVal NETWORK_PATIENT_EMAIL As String,  _
                    ByVal ACTIVE_PATIENT_FLAG As String,  _
                    ByVal NOTE As String,  _
                    ByVal STATUS As String,  _
                    ByVal MAX_ATTRIBUTION_MONTH As Global.System.Nullable(Of Decimal),  _
                    ByVal LAST_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(PATIENT_ID,Long)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(OUTREACH_DATE,Date)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(OUTREACH_ENTRY_DATETIME,Date)
            If (OUTREACH_CONTACT_PERSON Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OUTREACH_CONTACT_PERSON")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(OUTREACH_CONTACT_PERSON,String)
            End If
            If (OUTREACH_CONTACT_PERSON_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OUTREACH_CONTACT_PERSON_NAME")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(OUTREACH_CONTACT_PERSON_NAME,String)
            End If
            If (REASON_FOR_OUTREACH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(REASON_FOR_OUTREACH,String)
            End If
            If (CONTACT_MADE_IND.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CONTACT_MADE_IND.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CONTACT_NOT_MADE_IND.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CONTACT_NOT_MADE_IND.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (RETURN_CALL_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(RETURN_CALL_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (APPOINTMENT_DATE_RESULT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(APPOINTMENT_DATE_RESULT.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (DD_NOT_CONTACT_FLAG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(DD_NOT_CONTACT_FLAG,String)
            End If
            If (CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE,String)
            End If
            If (NETWORK_PATIENT_ADDR_LINE_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(NETWORK_PATIENT_ADDR_LINE_1,String)
            End If
            If (NETWORK_PATIENT_ADDR_LINE_2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(NETWORK_PATIENT_ADDR_LINE_2,String)
            End If
            If (NETWORK_PATIENT_CITY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(NETWORK_PATIENT_CITY,String)
            End If
            If (NETWORK_PATIENT_STATE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(NETWORK_PATIENT_STATE,String)
            End If
            If (NETWORK_PATIENT_ZIP_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(NETWORK_PATIENT_ZIP_CODE,String)
            End If
            If (NETWORK_PATIENT_HOME_PHONE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(NETWORK_PATIENT_HOME_PHONE,String)
            End If
            If (NETWORK_PATIENT_WORK_PHONE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(NETWORK_PATIENT_WORK_PHONE,String)
            End If
            If (NETWORK_PATIENT_MOBILE_PHONE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(NETWORK_PATIENT_MOBILE_PHONE,String)
            End If
            If (NETWORK_PATIENT_EMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(NETWORK_PATIENT_EMAIL,String)
            End If
            If (ACTIVE_PATIENT_FLAG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(ACTIVE_PATIENT_FLAG,String)
            End If
            If (NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(NOTE,String)
            End If
            If (STATUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(STATUS,String)
            End If
            If (MAX_ATTRIBUTION_MONTH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MAX_ATTRIBUTION_MONTH.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (LAST_REVISE_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(LAST_REVISE_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PATIENT_ID As Long,  _
                    ByVal OUTREACH_DATE As Date,  _
                    ByVal OUTREACH_ENTRY_DATETIME As Date,  _
                    ByVal OUTREACH_CONTACT_PERSON As String,  _
                    ByVal OUTREACH_CONTACT_PERSON_NAME As String,  _
                    ByVal REASON_FOR_OUTREACH As String,  _
                    ByVal CONTACT_MADE_IND As Global.System.Nullable(Of Integer),  _
                    ByVal CONTACT_NOT_MADE_IND As Global.System.Nullable(Of Integer),  _
                    ByVal RETURN_CALL_DATE As Global.System.Nullable(Of Date),  _
                    ByVal APPOINTMENT_DATE_RESULT As Global.System.Nullable(Of Date),  _
                    ByVal DD_NOT_CONTACT_FLAG As String,  _
                    ByVal CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE As String,  _
                    ByVal NETWORK_PATIENT_ADDR_LINE_1 As String,  _
                    ByVal NETWORK_PATIENT_ADDR_LINE_2 As String,  _
                    ByVal NETWORK_PATIENT_CITY As String,  _
                    ByVal NETWORK_PATIENT_STATE As String,  _
                    ByVal NETWORK_PATIENT_ZIP_CODE As String,  _
                    ByVal NETWORK_PATIENT_HOME_PHONE As String,  _
                    ByVal NETWORK_PATIENT_WORK_PHONE As String,  _
                    ByVal NETWORK_PATIENT_MOBILE_PHONE As String,  _
                    ByVal NETWORK_PATIENT_EMAIL As String,  _
                    ByVal ACTIVE_PATIENT_FLAG As String,  _
                    ByVal NOTE As String,  _
                    ByVal STATUS As String,  _
                    ByVal MAX_ATTRIBUTION_MONTH As Global.System.Nullable(Of Decimal),  _
                    ByVal LAST_REVISE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_PATIENT_ID As Long,  _
                    ByVal Original_OUTREACH_DATE As Date,  _
                    ByVal Original_OUTREACH_ENTRY_DATETIME As Date,  _
                    ByVal Original_OUTREACH_CONTACT_PERSON As String,  _
                    ByVal Original_OUTREACH_CONTACT_PERSON_NAME As String,  _
                    ByVal Original_REASON_FOR_OUTREACH As String,  _
                    ByVal Original_CONTACT_MADE_IND As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CONTACT_NOT_MADE_IND As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RETURN_CALL_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_APPOINTMENT_DATE_RESULT As Global.System.Nullable(Of Date),  _
                    ByVal Original_DD_NOT_CONTACT_FLAG As String,  _
                    ByVal Original_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE As String,  _
                    ByVal Original_NETWORK_PATIENT_ADDR_LINE_1 As String,  _
                    ByVal Original_NETWORK_PATIENT_ADDR_LINE_2 As String,  _
                    ByVal Original_NETWORK_PATIENT_CITY As String,  _
                    ByVal Original_NETWORK_PATIENT_STATE As String,  _
                    ByVal Original_NETWORK_PATIENT_ZIP_CODE As String,  _
                    ByVal Original_NETWORK_PATIENT_HOME_PHONE As String,  _
                    ByVal Original_NETWORK_PATIENT_WORK_PHONE As String,  _
                    ByVal Original_NETWORK_PATIENT_MOBILE_PHONE As String,  _
                    ByVal Original_NETWORK_PATIENT_EMAIL As String,  _
                    ByVal Original_ACTIVE_PATIENT_FLAG As String,  _
                    ByVal Original_NOTE As String,  _
                    ByVal Original_STATUS As String,  _
                    ByVal Original_MAX_ATTRIBUTION_MONTH As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LAST_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PATIENT_ID,Long)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OUTREACH_DATE,Date)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(OUTREACH_ENTRY_DATETIME,Date)
            If (OUTREACH_CONTACT_PERSON Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OUTREACH_CONTACT_PERSON")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(OUTREACH_CONTACT_PERSON,String)
            End If
            If (OUTREACH_CONTACT_PERSON_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OUTREACH_CONTACT_PERSON_NAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(OUTREACH_CONTACT_PERSON_NAME,String)
            End If
            If (REASON_FOR_OUTREACH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(REASON_FOR_OUTREACH,String)
            End If
            If (CONTACT_MADE_IND.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CONTACT_MADE_IND.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CONTACT_NOT_MADE_IND.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CONTACT_NOT_MADE_IND.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (RETURN_CALL_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(RETURN_CALL_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (APPOINTMENT_DATE_RESULT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(APPOINTMENT_DATE_RESULT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (DD_NOT_CONTACT_FLAG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(DD_NOT_CONTACT_FLAG,String)
            End If
            If (CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE,String)
            End If
            If (NETWORK_PATIENT_ADDR_LINE_1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NETWORK_PATIENT_ADDR_LINE_1,String)
            End If
            If (NETWORK_PATIENT_ADDR_LINE_2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(NETWORK_PATIENT_ADDR_LINE_2,String)
            End If
            If (NETWORK_PATIENT_CITY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(NETWORK_PATIENT_CITY,String)
            End If
            If (NETWORK_PATIENT_STATE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(NETWORK_PATIENT_STATE,String)
            End If
            If (NETWORK_PATIENT_ZIP_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(NETWORK_PATIENT_ZIP_CODE,String)
            End If
            If (NETWORK_PATIENT_HOME_PHONE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(NETWORK_PATIENT_HOME_PHONE,String)
            End If
            If (NETWORK_PATIENT_WORK_PHONE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(NETWORK_PATIENT_WORK_PHONE,String)
            End If
            If (NETWORK_PATIENT_MOBILE_PHONE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(NETWORK_PATIENT_MOBILE_PHONE,String)
            End If
            If (NETWORK_PATIENT_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(NETWORK_PATIENT_EMAIL,String)
            End If
            If (ACTIVE_PATIENT_FLAG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(ACTIVE_PATIENT_FLAG,String)
            End If
            If (NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(NOTE,String)
            End If
            If (STATUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(STATUS,String)
            End If
            If (MAX_ATTRIBUTION_MONTH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MAX_ATTRIBUTION_MONTH.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (LAST_REVISE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(LAST_REVISE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_PATIENT_ID,Long)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_OUTREACH_DATE,Date)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_OUTREACH_ENTRY_DATETIME,Date)
            If (Original_OUTREACH_CONTACT_PERSON Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OUTREACH_CONTACT_PERSON")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_OUTREACH_CONTACT_PERSON,String)
            End If
            If (Original_OUTREACH_CONTACT_PERSON_NAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_OUTREACH_CONTACT_PERSON_NAME")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_OUTREACH_CONTACT_PERSON_NAME,String)
            End If
            If (Original_REASON_FOR_OUTREACH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_REASON_FOR_OUTREACH,String)
            End If
            If (Original_CONTACT_MADE_IND.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_CONTACT_MADE_IND.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_CONTACT_NOT_MADE_IND.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_CONTACT_NOT_MADE_IND.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_RETURN_CALL_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_RETURN_CALL_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_APPOINTMENT_DATE_RESULT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_APPOINTMENT_DATE_RESULT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_DD_NOT_CONTACT_FLAG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_DD_NOT_CONTACT_FLAG,String)
            End If
            If (Original_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE,String)
            End If
            If (Original_NETWORK_PATIENT_ADDR_LINE_1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_NETWORK_PATIENT_ADDR_LINE_1,String)
            End If
            If (Original_NETWORK_PATIENT_ADDR_LINE_2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_NETWORK_PATIENT_ADDR_LINE_2,String)
            End If
            If (Original_NETWORK_PATIENT_CITY Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_NETWORK_PATIENT_CITY,String)
            End If
            If (Original_NETWORK_PATIENT_STATE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_NETWORK_PATIENT_STATE,String)
            End If
            If (Original_NETWORK_PATIENT_ZIP_CODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_NETWORK_PATIENT_ZIP_CODE,String)
            End If
            If (Original_NETWORK_PATIENT_HOME_PHONE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_NETWORK_PATIENT_HOME_PHONE,String)
            End If
            If (Original_NETWORK_PATIENT_WORK_PHONE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_NETWORK_PATIENT_WORK_PHONE,String)
            End If
            If (Original_NETWORK_PATIENT_MOBILE_PHONE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_NETWORK_PATIENT_MOBILE_PHONE,String)
            End If
            If (Original_NETWORK_PATIENT_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_NETWORK_PATIENT_EMAIL,String)
            End If
            If (Original_ACTIVE_PATIENT_FLAG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_ACTIVE_PATIENT_FLAG,String)
            End If
            If (Original_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_NOTE,String)
            End If
            If (Original_STATUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_STATUS,String)
            End If
            If (Original_MAX_ATTRIBUTION_MONTH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_MAX_ATTRIBUTION_MONTH.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_LAST_REVISE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_LAST_REVISE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal OUTREACH_CONTACT_PERSON As String,  _
                    ByVal OUTREACH_CONTACT_PERSON_NAME As String,  _
                    ByVal REASON_FOR_OUTREACH As String,  _
                    ByVal CONTACT_MADE_IND As Global.System.Nullable(Of Integer),  _
                    ByVal CONTACT_NOT_MADE_IND As Global.System.Nullable(Of Integer),  _
                    ByVal RETURN_CALL_DATE As Global.System.Nullable(Of Date),  _
                    ByVal APPOINTMENT_DATE_RESULT As Global.System.Nullable(Of Date),  _
                    ByVal DD_NOT_CONTACT_FLAG As String,  _
                    ByVal CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE As String,  _
                    ByVal NETWORK_PATIENT_ADDR_LINE_1 As String,  _
                    ByVal NETWORK_PATIENT_ADDR_LINE_2 As String,  _
                    ByVal NETWORK_PATIENT_CITY As String,  _
                    ByVal NETWORK_PATIENT_STATE As String,  _
                    ByVal NETWORK_PATIENT_ZIP_CODE As String,  _
                    ByVal NETWORK_PATIENT_HOME_PHONE As String,  _
                    ByVal NETWORK_PATIENT_WORK_PHONE As String,  _
                    ByVal NETWORK_PATIENT_MOBILE_PHONE As String,  _
                    ByVal NETWORK_PATIENT_EMAIL As String,  _
                    ByVal ACTIVE_PATIENT_FLAG As String,  _
                    ByVal NOTE As String,  _
                    ByVal STATUS As String,  _
                    ByVal MAX_ATTRIBUTION_MONTH As Global.System.Nullable(Of Decimal),  _
                    ByVal LAST_REVISE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_PATIENT_ID As Long,  _
                    ByVal Original_OUTREACH_DATE As Date,  _
                    ByVal Original_OUTREACH_ENTRY_DATETIME As Date,  _
                    ByVal Original_OUTREACH_CONTACT_PERSON As String,  _
                    ByVal Original_OUTREACH_CONTACT_PERSON_NAME As String,  _
                    ByVal Original_REASON_FOR_OUTREACH As String,  _
                    ByVal Original_CONTACT_MADE_IND As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CONTACT_NOT_MADE_IND As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RETURN_CALL_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_APPOINTMENT_DATE_RESULT As Global.System.Nullable(Of Date),  _
                    ByVal Original_DD_NOT_CONTACT_FLAG As String,  _
                    ByVal Original_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE As String,  _
                    ByVal Original_NETWORK_PATIENT_ADDR_LINE_1 As String,  _
                    ByVal Original_NETWORK_PATIENT_ADDR_LINE_2 As String,  _
                    ByVal Original_NETWORK_PATIENT_CITY As String,  _
                    ByVal Original_NETWORK_PATIENT_STATE As String,  _
                    ByVal Original_NETWORK_PATIENT_ZIP_CODE As String,  _
                    ByVal Original_NETWORK_PATIENT_HOME_PHONE As String,  _
                    ByVal Original_NETWORK_PATIENT_WORK_PHONE As String,  _
                    ByVal Original_NETWORK_PATIENT_MOBILE_PHONE As String,  _
                    ByVal Original_NETWORK_PATIENT_EMAIL As String,  _
                    ByVal Original_ACTIVE_PATIENT_FLAG As String,  _
                    ByVal Original_NOTE As String,  _
                    ByVal Original_STATUS As String,  _
                    ByVal Original_MAX_ATTRIBUTION_MONTH As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LAST_REVISE_DATE As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_PATIENT_ID, Original_OUTREACH_DATE, Original_OUTREACH_ENTRY_DATETIME, OUTREACH_CONTACT_PERSON, OUTREACH_CONTACT_PERSON_NAME, REASON_FOR_OUTREACH, CONTACT_MADE_IND, CONTACT_NOT_MADE_IND, RETURN_CALL_DATE, APPOINTMENT_DATE_RESULT, DD_NOT_CONTACT_FLAG, CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE, NETWORK_PATIENT_ADDR_LINE_1, NETWORK_PATIENT_ADDR_LINE_2, NETWORK_PATIENT_CITY, NETWORK_PATIENT_STATE, NETWORK_PATIENT_ZIP_CODE, NETWORK_PATIENT_HOME_PHONE, NETWORK_PATIENT_WORK_PHONE, NETWORK_PATIENT_MOBILE_PHONE, NETWORK_PATIENT_EMAIL, ACTIVE_PATIENT_FLAG, NOTE, STATUS, MAX_ATTRIBUTION_MONTH, LAST_REVISE_DATE, Original_PATIENT_ID, Original_OUTREACH_DATE, Original_OUTREACH_ENTRY_DATETIME, Original_OUTREACH_CONTACT_PERSON, Original_OUTREACH_CONTACT_PERSON_NAME, Original_REASON_FOR_OUTREACH, Original_CONTACT_MADE_IND, Original_CONTACT_NOT_MADE_IND, Original_RETURN_CALL_DATE, Original_APPOINTMENT_DATE_RESULT, Original_DD_NOT_CONTACT_FLAG, Original_CASE_MANAGEMENT_PATIENT_REFERRAL_SOURCE, Original_NETWORK_PATIENT_ADDR_LINE_1, Original_NETWORK_PATIENT_ADDR_LINE_2, Original_NETWORK_PATIENT_CITY, Original_NETWORK_PATIENT_STATE, Original_NETWORK_PATIENT_ZIP_CODE, Original_NETWORK_PATIENT_HOME_PHONE, Original_NETWORK_PATIENT_WORK_PHONE, Original_NETWORK_PATIENT_MOBILE_PHONE, Original_NETWORK_PATIENT_EMAIL, Original_ACTIVE_PATIENT_FLAG, Original_NOTE, Original_STATUS, Original_MAX_ATTRIBUTION_MONTH, Original_LAST_REVISE_DATE)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _cM_PATIENT_CONTACT_DOCTableAdapter As CM_PATIENT_CONTACT_DOCTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CM_PATIENT_CONTACT_DOCTableAdapter() As CM_PATIENT_CONTACT_DOCTableAdapter
            Get
                Return Me._cM_PATIENT_CONTACT_DOCTableAdapter
            End Get
            Set
                Me._cM_PATIENT_CONTACT_DOCTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._cM_PATIENT_CONTACT_DOCTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cM_PATIENT_CONTACT_DOCTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cM_PATIENT_CONTACT_DOCTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._cM_PATIENT_CONTACT_DOCTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As _VBE_DatamartDataSet2, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cM_PATIENT_CONTACT_DOCTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CM_PATIENT_CONTACT_DOC.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cM_PATIENT_CONTACT_DOCTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As _VBE_DatamartDataSet2, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cM_PATIENT_CONTACT_DOCTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CM_PATIENT_CONTACT_DOC.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cM_PATIENT_CONTACT_DOCTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As _VBE_DatamartDataSet2, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cM_PATIENT_CONTACT_DOCTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CM_PATIENT_CONTACT_DOC.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cM_PATIENT_CONTACT_DOCTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As _VBE_DatamartDataSet2) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._cM_PATIENT_CONTACT_DOCTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cM_PATIENT_CONTACT_DOCTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._cM_PATIENT_CONTACT_DOCTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cM_PATIENT_CONTACT_DOCTableAdapter, Me._cM_PATIENT_CONTACT_DOCTableAdapter.Connection)
                    Me._cM_PATIENT_CONTACT_DOCTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cM_PATIENT_CONTACT_DOCTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cM_PATIENT_CONTACT_DOCTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cM_PATIENT_CONTACT_DOCTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cM_PATIENT_CONTACT_DOCTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._cM_PATIENT_CONTACT_DOCTableAdapter) Is Nothing) Then
                    Me._cM_PATIENT_CONTACT_DOCTableAdapter.Connection = CType(revertConnections(Me._cM_PATIENT_CONTACT_DOCTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cM_PATIENT_CONTACT_DOCTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
